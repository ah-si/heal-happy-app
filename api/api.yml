openapi: 3.0.0info:  title: Soignez Heureux API v1  description: Soignez Heureux API v1  contact:    email: jimmy.aumard@gmail.com  license:    name: MIT License  version: v1security:  - Bearer:      [ ]paths:  /api/v1/auth/askResetPassword:    get:      operationId: askResetPassword      description: ""      requestBody:        required: true        content:          application/json:            schema:              type: object              title: askResetPassword              required:                - email              properties:                email:                  type: string                  nullable: false      responses:        200:          description: ""          content:            application/json:              schema:                "$ref": "#/components/schemas/LoginResponse"      tags:        - auth      security:        [ ]  /api/v1/auth/resetPassword:    post:        operationId: resetPassword        description: ""        requestBody:          required: true          content:            application/json:              schema:                type: object                title: resetPassword                required:                  - password                properties:                  password:                    type: string                    nullable: false                  token:                    type: string                    nullable: false        responses:          200:            description: ""        tags:          - auth        security:          [ ]  /api/v1/auth/login:    post:      operationId: login      description: ""      requestBody:        required: true        content:          application/json:            schema:              "$ref": "#/components/schemas/LoginRequest"      responses:        200:          description: ""          content:            application/json:              schema:                "$ref": "#/components/schemas/LoginResponse"      tags:        - auth      security:        [ ]  /api/v1/auth/register:    post:      operationId: register      description: ""      requestBody:        required: true        content:          application/json:            schema:              "$ref": "#/components/schemas/User"      responses:        200:          description: ""          content:            application/json:              schema:                "$ref": "#/components/schemas/LoginResponse"      tags:        - auth      security:        [ ]  /api/v1/auth/token/refresh:      post:        operationId: refreshToken        description: ""        requestBody:          required: true          content:            application/json:              schema:                type: object                title: RefreshTokenRequest                properties:                    refreshToken:                        type: string                        nullable: false        responses:          200:            description: ""            content:              application/json:                schema:                    "$ref": "#/components/schemas/LoginResponse"        tags:          - auth        security:          [ ]  /api/v1/healers/search:    parameters:      - name: job        in: query        required: true        schema:          type: string      - name: localization        in: query        required: true        schema:          type: string    get:      operationId: searchHealers      description: ""      responses:        "200":          description: All good          content:            application/json:              schema:                type: array                items:                  "$ref": "#/components/schemas/Healer"      tags:        - user  /api/v1/healers/{id}:    parameters:     - in: path       name: id       schema:         type: string       required: true    get:      operationId: getHealerProfile      description: ""      responses:        "200":          description: All good          content:            application/json:              schema:                "$ref": "#/components/schemas/Healer"      tags:        - user  /api/v1/healers/{id}/events:    parameters:     - in: path       name: id       schema:         type: string       required: true    post:      operationId: createEvent      description: ""      requestBody:        content:          application/json:            schema:              "$ref": "#/components/schemas/CreateEventRequest"      responses:        "201":          description: All good, event created      tags:        - user  /api/v1/healers/{id}/availabilities:    parameters:     - in: path       name: id       schema:         type: string       required: true     - in: query       name: from       schema:         type: string       required: true    get:        operationId: getHealerAvailabilities        description: ""        responses:          "200":            description: All good            content:              application/json:                schema:                  "$ref": "#/components/schemas/HealerAvailabilities"        tags:          - user  /api/v1/users/me/events/{eventId}:    parameters:    - in: path      name: eventId      schema:       type: string      required: true    delete:      operationId: deleteEvent      responses:       "202":         description: Event deleted      tags:      - user  /api/v1/users/me/events:      get:        operationId: getEvents        description: ""        responses:          "200":            description: All good            content:              application/json:                schema:                  type: array                  items:                    "$ref": "#/components/schemas/UserEvent"        tags:          - user  /api/v1/users/me:    get:      operationId: getProfile      description: ""      responses:        "200":          description: All good          content:            application/json:              schema:                "$ref": "#/components/schemas/User"      tags:        - user    patch:      operationId: saveProfile      description: ""      requestBody:        content:          application/json:            schema:              "$ref": "#/components/schemas/User"      responses:        "200":          description: All good          content:            application/json:              schema:                "$ref": "#/components/schemas/User"      tags:        - userservers:  - url: https://localhost:3443/  - url: https://soignez-heureuxcomponents:  securitySchemes:    Bearer:      in: header      name: Authorization      type: apiKey  schemas:    LoginRequest:      type: object      required:        - email        - password      properties:        email:          type: string        password:          type: string    LoginResponse:      type: object      required:        - token        - refreshToken      properties:        token:          type: string        refreshToken:          type: string    UserEvent:        type: object        required:          - id          - link          - start          - end          - name          - healer          - patient        properties:           id:             type: string             nullable: false           patient:             nullable: false             $ref: '#/components/schemas/User'           healer:             nullable: false             $ref: '#/components/schemas/Healer'           start:             type: string             format: date-time             nullable: false           end:             type: string             format: date-time             nullable: false           name:             type: string             nullable: false           description:             type: string             nullable: true           link:             type: string             format: url             nullable: false    CreateEventRequest:        type: object        required:          - patientId          - slot        properties:          slot:            type: string            format: date-time            nullable: false          patientId:            type: string            nullable: false          message:            type: string            nullable: true    HealerAvailabilities:        type: object        required:          - until          - slots        properties:          slots:            type: array            items:              type: string              format: date-time          until:            type: string            nullable: false    User:      required:      - email      - type      - firstName      - lastName      - lang      allOf:      - $ref: '#/components/schemas/Healer'      - type: object        properties:          id:            type: string            nullable: true          email:            type: string            format: email            nullable: false          mobile:            type: string            nullable: false          password:            type: string            nullable: true    Healer:      required:      - type      - firstName      - lastName      - lang      - city      - isAddressPublic      - zipCode      - calendarSettings      - isActivated      - isVerified      - consultationDuration      - description      type: object      properties:        id:          type: string          readOnly: true          nullable: false        isVerified:            type: boolean            nullable: false        isActivated:            type: boolean            nullable: false        job:            type: string            nullable: true        firstName:            type: string            nullable: false        consultationDuration:            type: integer            nullable: true        isAddressPublic:            type: boolean            default: false            nullable: false        lang:            type: string            nullable: false        type:            "$ref": "#/components/schemas/UserTypeEnum"        experiences:            type: string            nullable: true        description:            type: string            nullable: true        diploma:            type: string            nullable: true        website:            type: string            nullable: true        social1:            type: string            nullable: true        social2:            type: string            nullable: true        social3:            type: string            nullable: true        lastName:            type: string            nullable: false        calendarSettings:            "$ref": "#/components/schemas/CalendarSettings"        street:            type: string            nullable: true        street2:            type: string            nullable: true        zipCode:            type: string            nullable: false        country:            type: string            nullable: false        city:            type: string            nullable: false        avatar:            type: string            format: binary            nullable: false    UserTypeEnum:        type: string        enum:         - admin         - patient         - healer    CalendarSettings:      type: object      properties:        monday:          "$ref": "#/components/schemas/CalendarDaySettings"        tuesday:          "$ref": "#/components/schemas/CalendarDaySettings"        wednesday:          "$ref": "#/components/schemas/CalendarDaySettings"        thursday:          "$ref": "#/components/schemas/CalendarDaySettings"        friday:          "$ref": "#/components/schemas/CalendarDaySettings"        saturday:          "$ref": "#/components/schemas/CalendarDaySettings"        sunday:          "$ref": "#/components/schemas/CalendarDaySettings"    CalendarDaySettings:      type: object      nullable: true      properties:        startHour:          type: integer          nullable: true        startMinute:          type: integer          nullable: true        endHour:          type: integer          nullable: true        endMinute:          type: integer          nullable: true        start2Hour:          type: integer          nullable: true        start2Minute:          type: integer          nullable: true        end2Hour:          type: integer          nullable: true        end2Minute:          type: integer          nullable: true